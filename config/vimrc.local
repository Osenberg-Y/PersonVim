syntax on
" 语法高亮
 
autocmd InsertLeave * se nocul
autocmd InsertEnter * se cul
" 用浅色高亮当前行
 
set smartindent
" 智能对齐
 
set autoindent
" 自动对齐
 
set confirm
" 在处理未保存或只读文件的时候，弹出确认
 
set tabstop=2
" Tab键的宽度
 
set softtabstop=2
set shiftwidth=2
"  统一缩进为4
 
set noexpandtab
" 不要用空格代替制表符
 
set number
" 显示行号
 
set history=50
" 历史纪录数
 
set hlsearch
set incsearch
" 搜索逐字符高亮
 
set gdefault
" 行内替换
 
set encoding=utf-8
set fileencodings=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936,utf-16,big5,euc-jp,latin1
" 编码设置
 
colorscheme default
" 设置颜色主题
 
" set mouse=a
" use mouse
 
 
"set guifont=Menlo:h16:cANSI
" 设置字体
 
set langmenu=zn_CN.UTF-8
set helplang=cn
" 语言设置
 
set cmdheight=2
" 命令行（在状态行）的高度，默认为1,这里是2
 
set ruler
" 在编辑过程中，在右下角显示光标位置的状态行
 
set laststatus=2
" 总是显示状态行
 
set showcmd
" 在状态行显示目前所执行的命令，未完成的指令片段亦会显示出来
 
set scrolloff=3
" 光标移动到buffer的顶部和底部时保持3行距离
 
set showmatch
" 高亮显示对应的括号
 
set matchtime=5
" 对应括号高亮的时间（单位是十分之一秒）
 
set autowrite
" 在切换buffer时自动保存当前文件
 
set wildmenu
" 增强模式中的命令行自动完成操作
 
set linespace=2
" 字符间插入的像素行数目
 
set whichwrap=b,s,<,>,[,]
" 开启Normal或Visual模式下Backspace键，空格键，左方向键，右方向键，Insert或replace模式下左方向键，右方向键跳行的功能。
 
filetype plugin indent on
" 分为三部分命令：file on, file plugin on, file indent on.分别表示自动识别文件类型，用文件类型脚本，使用缩进定义文件。

"共享剪切板
set clipboard+=unnamed 

"==================自定义的键映射======================
 
vnoremap $1 <esc>`>a)<esc>`<i(<esc>
vnoremap $2 <esc>`>a]<esc>`<i[<esc>
vnoremap $3 <esc>`>a}<esc>`<i{<esc>
vnoremap $$ <esc>`>a"<esc>`<i"<esc>
vnoremap $q <esc>`>a'<esc>`<i'<esc>
vnoremap $e <esc>`>a"<esc>`<i"<esc>
" 括号自动生成
 
inoremap ( ()<ESC>i
inoremap ) <c-r>=ClosePair(')')<CR>
inoremap { {}<ESC>i
inoremap } <c-r>=ClosePair('}')<CR>
inoremap [ []<ESC>i
inoremap ] <c-r>=ClosePair(']')<CR>
"inoremap < <><ESC>i
"inoremap > <c-r>=ClosePair('>')<CR>
function ClosePair(char)
    if getline('.')[col('.') - 1] == a:char
        return "\<Right>"
    else
        return a:char
    endif
endf
"括号自动补全

" YCM configure
let g:ycm_global_ycm_extra_conf='~/.vim/plugged/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'
"关闭加载.ycm_extra_conf.py提示
let g:ycm_confirm_extra_conf=0 
" C++ 
let g:syntastic_cpp_compiler = 'g++'
let g:syntastic_cpp_compiler_options = '-std=c++11 -stdlib=libc++'
" 让YouCompleteMe同时利用原来的ctags
let g:ycm_collect_identifiers_from_tag_files = 1

" indexer                                                       
" 设置indexer 调用 ctags 的参数                                 
" 默认 --c++-kinds=+p+l，重新设置为 --c++-kinds=+p+l+x+c+d+e+f+g+m+n+s+t+u+v
" 默认 --fields=+iaS 不满足 YCM 要求，需改为 --fields=+iaSl                                       
let g:indexer_ctagsCommandLineOptions="--c++-kinds=+p+l+x+c+d+e+f+g+m+n+s+t+u+v --fields=+iaSl --extra=+q"


" vim-airline
" select theme
" let g:airline_theme='angr'
" 显示窗口tab和buffer
let g:airline#extensions#tabline#enabled=1 
" 设置tab键映射
nmap <tab> :bn<cr> 

" airline options
let g:airline_powerline_fonts=1
  if !exists('g:airline_symbols')
    let g:airline_symbols = {}
  endif

" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.crypt = '🔒'
let g:airline_symbols.linenr = '☰'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.maxlinenr = '㏑'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.spell = 'Ꞩ'
let g:airline_symbols.notexists = 'Ɇ'
let g:airline_symbols.whitespace = 'Ξ'

" NERDTree 
" 在 vim 启动的时候默认开启 NERDTree
" autocmd VimEnter * NERDTree
" 按下 F2 调出/隐藏
map <F2> :NERDTreeToggle<CR>
" 将 NERDTree 的窗口设置在 vim 窗口的右侧（默认为左侧）
let NERDTreeWinPos="right"
" 当打开 NERDTree 窗口时，自动显示 Bookmarks
let NERDTreeShowBookmarks=1
" 打开vim时如果没有文件自动打开NERDTree
autocmd vimenter * if !argc()|NERDTree|endif

" set taglist
map <F3> ::TlistToggle<CR>              "按下 F3 调出/隐藏
let Tlist_Ctags_Cmd='ctags'
let Tlist_Show_One_File=1               "不同时显示多个文件的tag，只显示当前文件的
let Tlist_WinWidt =28                   "设置taglist的宽度
let Tlist_Exit_OnlyWindow=1             "如果taglist窗口是最后一个窗口，则退出vim
"let Tlist_Use_Right_Window=1           "在右侧窗口中显示taglist窗口
let Tlist_Use_Left_Windo =1             "在左侧窗口中显示taglist窗口
let Tlist_Auto_Open=0

" set ctags
set tags=tags
set autochdir
